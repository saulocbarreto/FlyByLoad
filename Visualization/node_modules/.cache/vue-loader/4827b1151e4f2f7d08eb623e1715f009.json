{"remainingRequest":"/home/saulo/Documents/FlyByLoad/Visualization/myapp2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/saulo/Documents/FlyByLoad/Visualization/myapp2/src/views/Monitoring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/saulo/Documents/FlyByLoad/Visualization/myapp2/src/views/Monitoring.vue","mtime":1629987498661},{"path":"/home/saulo/Documents/FlyByLoad/Visualization/myapp2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saulo/Documents/FlyByLoad/Visualization/myapp2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/saulo/Documents/FlyByLoad/Visualization/myapp2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/saulo/Documents/FlyByLoad/Visualization/myapp2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOyAgIAppbXBvcnQgVnVlQXBleENoYXJ0cyBmcm9tICd2dWUtYXBleGNoYXJ0cycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTW9uaXRvcmluZycsCiAgIGNvbXBvbmVudHM6IHsKICAgICAgICAgIGFwZXhjaGFydDogVnVlQXBleENoYXJ0cywKICAgICAgICB9LAogICAgICAgIAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtc2c6ICcnLAogICAgICBzZW5zb3IyOiAnJywKICAgICAgc2Vuc29yMzogJycsCiAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgZGF0YTogZGF0YS5zbGljZSgpCiAgICAgICAgICB9XSwKICAgICAgICAgIGNoYXJ0T3B0aW9uczogewogICAgICAgICAgICBjaGFydDogewogICAgICAgICAgICAgIGlkOiAncmVhbHRpbWUnLAogICAgICAgICAgICAgIGhlaWdodDogMzUwLAogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICBhbmltYXRpb25zOiB7CiAgICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgICAgZWFzaW5nOiAnbGluZWFyJywKICAgICAgICAgICAgICAgIGR5bmFtaWNBbmltYXRpb246IHsKICAgICAgICAgICAgICAgICAgc3BlZWQ6IDEwMDAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHRvb2xiYXI6IHsKICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB6b29tOiB7CiAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YUxhYmVsczogewogICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN0cm9rZTogewogICAgICAgICAgICAgIGN1cnZlOiAnc21vb3RoJwogICAgICAgICAgICB9LAogICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgIHRleHQ6ICdEeW5hbWljIFVwZGF0aW5nIENoYXJ0JywKICAgICAgICAgICAgICBhbGlnbjogJ2xlZnQnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1hcmtlcnM6IHsKICAgICAgICAgICAgICBzaXplOiAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgdHlwZTogJ2RhdGV0aW1lJywKICAgICAgICAgICAgICByYW5nZTogWEFYSVNSQU5HRSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeWF4aXM6IHsKICAgICAgICAgICAgICBtYXg6IDEwMAogICAgICAgICAgICB9LAogICAgICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgICAgICBzaG93OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgIH07CiAgfSwKIAogICAgICAgIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBtZSA9IHRoaXMKICAgICAgICAgIHdpbmRvdy5zZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGdldE5ld1NlcmllcyhsYXN0RGF0ZSwgewogICAgICAgICAgICAgIG1pbjogMTAsCiAgICAgICAgICAgICAgbWF4OiA5MAogICAgICAgICAgICB9KQogICAgICAgICAgICAKICAgICAgICAgICAgbWUuJHJlZnMuY2hhcnQudXBkYXRlU2VyaWVzKFt7CiAgICAgICAgICAgICAgZGF0YTogZGF0YQogICAgICAgICAgICB9XSkKICAgICAgICAgIH0sIDEwMDApCiAgICAgICAgCiAgICAgICAgICAvLyBldmVyeSA2MCBzZWNvbmRzLCB3ZSByZXNldCB0aGUgZGF0YSB0byBwcmV2ZW50IG1lbW9yeSBsZWFrcwogICAgICAgICAgd2luZG93LnNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgcmVzZXREYXRhKCkKICAgICAgICAgICAgCiAgICAgICAgICAgIG1lLiRyZWZzLmNoYXJ0LnVwZGF0ZVNlcmllcyhbewogICAgICAgICAgICAgIGRhdGEKICAgICAgICAgICAgfV0sIGZhbHNlLCB0cnVlKQogICAgICAgICAgfSwgNjAwMDApCiAgICAgICAgfSwKICAgIAoKIAogIG1ldGhvZHM6IHsKICAgIAogICAgZ2V0TWVzc2FnZSgpIHsKICAgICAgY29uc3QgcGF0aCA9ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvZW1taXRlcic7CiAgICAgIGF4aW9zLmdldChwYXRoKQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKHBhdGgpCiAgICAgICAgICB0aGlzLm1zZyA9IChyZXMuZGF0YSkudG9GaXhlZCgyKTsKICAgICAgICAgIHRoaXMuc2Vuc29yMiA9IChwYXJzZUZsb2F0KHRoaXMubXNnKSAqIDIpLnRvRml4ZWQoMikKICAgICAgICAgIHRoaXMuc2Vuc29yMyA9IChwYXJzZUZsb2F0KHRoaXMubXNnKSAqIDMpLnRvRml4ZWQoMikKICAgICAgICAgCiAgICAgICAgICByZXR1cm4odGhpcy5tc2csIHRoaXMuc2Vuc29yMiwgdGhpcy5zZW5zb3IzKQogICAgICAgICAgCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgIH0pOyAgICAgIAogICAgfSwKCiAgICBnZXREYXRhKCkgewogICAgcmV0dXJuIE1hdGgucmFuZG9tKCk7CiAgICB9LCAgICAKCiAgICAKICAgICAgICAKICB9LAogIGNyZWF0ZWQoKSB7CiAgICAKICAgCiAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5nZXRNZXNzYWdlKCksIDEwMDApOwogIAogICAgCiAgICAgCiAgICAKICB9LAp9OwoKCg=="},{"version":3,"sources":["Monitoring.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;;AAGA;;;;;AAKA;AACA","file":"Monitoring.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n  \n    <div id = \"title\">\n      \n      <h1>Fly-by-Load Panel</h1>\n    </div>\n\n    <div class=\"cards\">\n\n      <div class=\"card\" id=\"heartrate\">\n      <h2 class=\"sensortitle\"> Heart Rate<br>(BPM)</h2>        \n      <h4 id=\"value1\"> {{ msg }}</h4>\n      </div>  \n    \n      <div class=\"card skinconduc\">\n        <h2 class=\"sensortitle\">Skin Conductance<br>(µs)</h2>        \n        <h4 id=\"value2\"> {{ sensor2 }}</h4>\n      </div> \n        \n      <div class=\"card skintemp\">\n        <h2 class=\"sensortitle\">Skin Temperature<br >(°C)</h2>        \n        <h4 id=\"value3\">{{ sensor3 }}</h4>\n      </div>  \n      <br>\n    </div> \n\n    <div id=\"ctchart\">\n    <div id = \"chart\">    \n       <apexchart type=\"line\" height=\"350\" ref=\"chart\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n    </div>\n    \n  </div>\n\n  \n\n  <div id = \"ctindicator\">\n   \n      <h2>Risk</h2>\n        <div id=\"indicator\">\n          Level\n        </div>\n     \n  </div>\n  <hr />\n  \n   \n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios';   \nimport VueApexCharts from 'vue-apexcharts'\n\nexport default {\n  name: 'Monitoring',\n   components: {\n          apexchart: VueApexCharts,\n        },\n        \n  data() {\n    return {\n      msg: '',\n      sensor2: '',\n      sensor3: '',\n      series: [{\n            data: data.slice()\n          }],\n          chartOptions: {\n            chart: {\n              id: 'realtime',\n              height: 350,\n              type: 'line',\n              animations: {\n                enabled: true,\n                easing: 'linear',\n                dynamicAnimation: {\n                  speed: 1000\n                }\n              },\n              toolbar: {\n                show: false\n              },\n              zoom: {\n                enabled: false\n              }\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              curve: 'smooth'\n            },\n            title: {\n              text: 'Dynamic Updating Chart',\n              align: 'left'\n            },\n            markers: {\n              size: 0\n            },\n            xaxis: {\n              type: 'datetime',\n              range: XAXISRANGE,\n            },\n            yaxis: {\n              max: 100\n            },\n            legend: {\n              show: false\n            },\n          },\n    };\n  },\n \n        mounted: function () {\n          var me = this\n          window.setInterval(function () {\n            getNewSeries(lastDate, {\n              min: 10,\n              max: 90\n            })\n            \n            me.$refs.chart.updateSeries([{\n              data: data\n            }])\n          }, 1000)\n        \n          // every 60 seconds, we reset the data to prevent memory leaks\n          window.setInterval(function () {\n            resetData()\n            \n            me.$refs.chart.updateSeries([{\n              data\n            }], false, true)\n          }, 60000)\n        },\n    \n\n \n  methods: {\n    \n    getMessage() {\n      const path = 'http://localhost:5000/emmiter';\n      axios.get(path)\n        .then((res) => {\n          console.log(path)\n          this.msg = (res.data).toFixed(2);\n          this.sensor2 = (parseFloat(this.msg) * 2).toFixed(2)\n          this.sensor3 = (parseFloat(this.msg) * 3).toFixed(2)\n         \n          return(this.msg, this.sensor2, this.sensor3)\n          \n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });      \n    },\n\n    getData() {\n    return Math.random();\n    },    \n\n    \n        \n  },\n  created() {\n    \n   \n    this.interval = setInterval(() => this.getMessage(), 1000);\n  \n    \n     \n    \n  },\n};\n\n\n</script>\n\n<style> \n* {\n  margin: 0;\n  padding: 0;\n  }\n\nbody{\n  font-size: 20px;\n  font-family: monospace;\n  text-align:center;\n  margin: 0 auto;\n}\n\n#title{\n    color: #050A30;\n    padding: 25px;\n\n  \n}\n\nh2{\n  font-weight: 800;\n  font-size: 16px;\n  padding: 5px;\n}\n\nh4{\n  font-weight: 300;\n  font-size: 14px;\n}\n\n .cards {\n  \n  height:150px;\n  padding: 3px; \n  padding-bottom: 5px;\n  padding-top: 5px;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 0px;\n\n  \n  \n} \n\n.card {\n  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.6);\n  transition: 0.3s;\n  border-radius: 15px; /* 5px rounded corners */\n  margin: 10px;\n  padding: 30px; /* if you want space between the images */\n  background-color: white;\n  \n}\n\n#indicator {\n  \n  height: 60px;\n  border: 1px solid #dddddd;\n  margin: auto;\n  width: 90%;\n  border-radius: 50%;\n  padding: 5px;\n  line-height: 60px; \n  font-size: 20px;\n  color: #fff;\n  text-align: center;\n  background-color: green;\n  \n}\n\n#ctindicator{\n  \n  padding: 20px;\n  box-shadow: 0px 4px 8px 0px rgba(0,0,0,0.8);\n  transition: 0.3s;\n  border-radius: 15px; /* 5px rounded corners */\n  margin: auto;\n  background-color: white;\n  width: 10%;\n  padding: 20px;\n  margin-top: 5px; \n  margin-bottom: 5px; \n  color: #919191;\n  \n}\n\n#ctchart{\n padding: 5px;\n \n}\n\n#chart{\n  padding: 0px;\n  height: 400px;\n  \n}\n\n\n#value1{\n  padding:15px;\n}\n\n#value2{\n  padding:15px;\n}\n\n#value3{\n  padding:15px;\n}\n\n.sensortitle{\n  color: #919191;\n}\n\n\n</style>"]}]}